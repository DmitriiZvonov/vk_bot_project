import requests
import time
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    filename="bot.log",  # –ò–º—è —Ñ–∞–π–ª–∞ –ª–æ–≥–∞
    level=logging.INFO,  # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    format="%(asctime)s - %(levelname)s - %(message)s",  # –§–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏
    datefmt="%Y-%m-%d %H:%M:%S",  # –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏
)

# –í–∞—à API-—Ç–æ–∫–µ–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
VK_API_TOKEN = "vk1.a.v6redrSc43L4VJjSUNdxT8ckDAEvQDrMb92J_o3mLWs_X5BiwI4px2l33eOulYgAqG0bGK9u0GCHgARF5fxJcnwXz0aYa7dirJmfb8jjRNIV1s-9cpcMr0KJsNn64qfHKHAuwQBGsLFNk-HzXA1SKXfdsK8j4fo7lkfwaMl0kZVjHcR8xedi3gNHU4rjRkQGAuBGQpIq6x4cdY5xpJNbVA"
# ID —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
GROUP_ID = "228816972"

# URL –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å VK API
VK_API_URL = "https://api.vk.com/method/"
API_VERSION = "5.131"

def get_long_poll_server():
    """–ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Long Poll —Å–µ—Ä–≤–µ—Ä–∞."""
    url = f"{VK_API_URL}groups.getLongPollServer"
    params = {
        "access_token": VK_API_TOKEN,
        "group_id": GROUP_ID,
        "v": API_VERSION
    }
    response = requests.get(url, params=params).json()
    if "response" in response:
        return response["response"]
    else:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Long Poll —Å–µ—Ä–≤–µ—Ä–∞: {response}")
        raise Exception(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Long Poll —Å–µ—Ä–≤–µ—Ä–∞: {response}")

def send_message(user_id, message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –ª–æ–≥–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    url = f"{VK_API_URL}messages.send"
    params = {
        "access_token": VK_API_TOKEN,
        "user_id": user_id,
        "message": message,
        "random_id": int(time.time() * 1000),  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        "v": API_VERSION
    }
    response = requests.post(url, params=params).json()
    if "response" in response:
        logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {message}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    else:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {response}")
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {response}")

def handle_new_subscriber(user_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞."""
    welcome_message = (
        "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ \"–î—É–±–∞–π –Ω–∞ –ª–∞–¥–æ–Ω–∏\"!\n\n"
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –î–º–∏—Ç—Ä–∏–π, –∏ —è —Ä–∞–¥, —á—Ç–æ –≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å. –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ:\n"
        "üåç –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –∂–∏–∑–Ω–∏ –∏ –æ—Ç–¥—ã—Ö—É –≤ –î—É–±–∞–µ.\n"
        "üí° –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ª–∞–π—Ñ—Ö–∞–∫–∏, –∞ —Ç–∞–∫–∂–µ –ø–æ–º–æ—â—å –≤ —à–æ–ø–∏–Ω–≥–µ, —ç–∫—Å–∫—É—Ä—Å–∏—è—Ö –∏ –±–∏–∑–Ω–µ—Å–µ.\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!"
    )
    try:
        send_message(user_id, welcome_message)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

def listen_to_long_poll():
    """–°–ª—É—à–∞–µ—Ç Long Poll —Å–µ—Ä–≤–µ—Ä –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è."""
    server_data = get_long_poll_server()
    server = server_data["server"]
    if not server.startswith("https://"):
        server = f"https://{server}"
    key = server_data["key"]
    ts = server_data["ts"]

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è...")
    while True:
        try:
            response = requests.get(server, params={
                "act": "a_check",
                "key": key,
                "ts": ts,
                "wait": 25
            }).json()

            if "failed" in response:
                logging.warning(f"–û—à–∏–±–∫–∞ Long Poll: {response}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...")
                server_data = get_long_poll_server()
                server = server_data["server"]
                if not server.startswith("https://"):
                    server = f"https://{server}"
                key = server_data["key"]
                ts = server_data["ts"]
                continue

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
            ts = response["ts"]
            updates = response.get("updates", [])
            for event in updates:
                if event["type"] == "group_join":  # –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
                    user_id = event["object"]["user_id"]
                    logging.info(f"–ù–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫: {user_id}")
                    print(f"–ù–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫: {user_id}")
                    handle_new_subscriber(user_id)

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞: {e}")
            time.sleep(5)  # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π

if __name__ == "__main__":
    listen_to_long_poll()
