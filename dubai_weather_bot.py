import requests
import schedule
import time

# üîπ –í–∞—à API-–∫–ª—é—á OpenWeatherMap (https://openweathermap.org/)
WEATHER_API_KEY = "1faa01402c157e4cf083b134f816f312"

# üîπ –í–∞—à API-—Ç–æ–∫–µ–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ VK
VK_API_TOKEN = "vk1.a.u9v_PWhvCEyOkPfYa5X0ZTgrGkbhGj84iC9tXR-3rrZqoxm4nZk0hmMBzFQ6R5Rbfkj2V5B4tu1IZtAbxZIGkS1OJ3yyVRMjObmyMUfpFl4aycGzx_LSlePnJk8vyD-TO6wz5GVoHmx8sPr-R3vXPVuLduokaKI0yxOaOf_7Ct80FxACixbFXJX128qrMsgXQJXZkzxxYTHW3cRdh2ShMw"
GROUP_ID = "228816972"

# üîπ URL API –¥–ª—è –ø–æ–≥–æ–¥—ã (–î—É–±–∞–π, –û–ê–≠)
WEATHER_API_URL = "https://api.openweathermap.org/data/2.5/weather"
FORECAST_API_URL = "https://api.openweathermap.org/data/2.5/forecast"
CITY = "Dubai"
COUNTRY_CODE = "AE"

# üîπ URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ VK API
VK_API_URL = "https://api.vk.com/method/wall.post"
VK_API_VERSION = "5.131"

# üîπ –•–µ—à—Ç–µ–≥–∏
HASHTAGS = "#–ü–æ–≥–æ–¥–∞–í–î—É–±–∞–µ #–î—É–±–∞–π #–û–ê–≠ #–ü—Ä–æ–≥–Ω–æ–∑–ü–æ–≥–æ–¥—ã #DubaiWeather #UAE"

def get_weather():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ –î—É–±–∞–µ"""
    params = {
        "q": f"{CITY},{COUNTRY_CODE}",
        "appid": WEATHER_API_KEY,
        "units": "metric",  # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –¶–µ–ª—å—Å–∏—è
        "lang": "ru"
    }
    response = requests.get(WEATHER_API_URL, params=params)
    data = response.json()

    if response.status_code == 200:
        temp = data["main"]["temp"]  # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–π—á–∞—Å
        feels_like = data["main"]["feels_like"]  # –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫
        humidity = data["main"]["humidity"]  # –í–ª–∞–∂–Ω–æ—Å—Ç—å
        wind_speed = data["wind"]["speed"]  # –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
        weather_desc = data["weather"][0]["description"].capitalize()  # –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã

        return {
            "temp": temp,
            "feels_like": feels_like,
            "humidity": humidity,
            "wind_speed": wind_speed,
            "weather_desc": weather_desc
        }
    else:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã: {data}")
        return None

def get_forecast():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ –¥–µ–Ω—å"""
    params = {
        "q": f"{CITY},{COUNTRY_CODE}",
        "appid": WEATHER_API_KEY,
        "units": "metric",
        "lang": "ru",
        "cnt": 4  # –ë–µ—Ä–µ–º 4 –±–ª–∏–∂–∞–π—à–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑–∞ (–ø—Ä–∏–º–µ—Ä–Ω–æ 12 —á–∞—Å–æ–≤)
    }
    response = requests.get(FORECAST_API_URL, params=params)
    data = response.json()

    if response.status_code == 200:
        temp_min = min([entry["main"]["temp_min"] for entry in data["list"]])  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
        temp_max = max([entry["main"]["temp_max"] for entry in data["list"]])  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
        rain_chance = any("rain" in entry["weather"][0]["main"].lower() for entry in data["list"])  # –ë—É–¥–µ—Ç –ª–∏ –¥–æ–∂–¥—å?

        forecast_text = f"üå° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: {temp_max:.1f}¬∞C | –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: {temp_min:.1f}¬∞C\n"
        forecast_text += "üåß –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è: –î–∞" if rain_chance else "üå§ –î–æ–∂–¥—è –Ω–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è"

        return forecast_text
    else:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞: {data}")
        return None

def post_message_to_vk(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ VK"""
    params = {
        "access_token": VK_API_TOKEN,
        "owner_id": f"-{GROUP_ID}",
        "message": message,
        "v": VK_API_VERSION
    }
    response = requests.post(VK_API_URL, params=params)
    
    if response.status_code == 200 and "response" in response.json():
        print("‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {response.text}")

def job():
    """–û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞: –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã –∏ –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ –¥–µ–Ω—å"""
    print("üîπ –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –∏ –ø—Ä–æ–≥–Ω–æ–∑...")
    
    weather_now = get_weather()
    weather_forecast = get_forecast()
    
    if weather_now and weather_forecast:
        message = (
            f"üåû –ü–æ–≥–æ–¥–∞ –≤ –î—É–±–∞–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
            f"üìç –°–µ–π—á–∞—Å: {weather_now['temp']:.1f}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {weather_now['feels_like']:.1f}¬∞C)\n"
            f"üí® –í–µ—Ç–µ—Ä: {weather_now['wind_speed']} –º/—Å\n"
            f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_now['humidity']}%\n"
            f"üå§Ô∏è {weather_now['weather_desc']}\n\n"
            f"üîÆ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ —á–∞—Å—ã:\n{weather_forecast}\n\n"
            f"{HASHTAGS}"
        )
        print("üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –≤ VK...")
        post_message_to_vk(message)

# –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –≤ 08:00 —É—Ç—Ä–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
schedule.every().day.at("08:00").do(job)

if __name__ == "__main__":
    print("üå§Ô∏è –ë–æ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥–µ—Ç 08:00...")
    job()  # –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ

    while True:
        schedule.run_pending()
        time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
